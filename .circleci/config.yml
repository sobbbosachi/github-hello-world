# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
# .circleci/config.yml
defaults: &defaults
  docker:
    - image: circleci/node:13.8.0
  working_directory: ~/project

version: 2.1
commands:
  print_pipeline_id:
    description: "A very simple command for demonstration purposes"
    parameters:
      id:
        type: string
    steps:
      - run: echo << parameters.id >>
  print_pipeline_id2:
    steps:
      - run: echo ${CIRCLE_WORKFLOW_ID}

jobs:
  save_hello_world_output:
    <<: *defaults
    steps:
      - run:
          command:
            cd .. && mkdir tmp && cd tmp && pwd &&
            echo "hello world" > /home/circleci/tmp/output.txt
      - persist_to_workspace:
          root: /home/circleci/tmp
          paths:
            - output.txt

  print_output_file:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /home/circleci/tmp
      - run:
          command:
            pwd &&
            cat /home/circleci/tmp/output.txt

  print_pipeline_id_job:
    <<: *defaults
    steps:
      - print_pipeline_id:
          id: $CIRCLE_WORKFLOW_ID
          #id: << pipeline.id >>
  print_pipeline_id_job2:
    <<: *defaults
    steps:
      - print_pipeline_id2

  envir_print:
    docker:
      - image: "circleci/node:9.6.1"
    steps:
      - run:
          command: 
            echo ${SOBBOSACHI}

  job_failures:
    <<: *defaults
    steps:
      - run:
          name: Testing application
          command: make test
          shell: /bin/bash
          working_directory: ~/my-app
          no_output_timeout: 30m
          environment:
            FOO: bar
      - run: echo 127.0.0.1 devhost | sudo tee -a /etc/hosts
      - run: 
          sudo -u root createuser -h localhost --superuser ubuntu &&
          sudo createdb -h localhost test_db
      - run:
          name: Upload Failed Tests
          command: curl --data fail_tests.log http://example.com/error_logs
          when: on_fail


workflows:
  welcome:
    jobs:
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
      - envir_print
      - print_pipeline_id_job
      - print_pipeline_id_job2
      - job_failures